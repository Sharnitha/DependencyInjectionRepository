  name: CD file
  
  on: 
     workflow_run:
      workflows: 
       - CI
      types:
        - completed
     
  jobs:
    AKS_CD_Deployment:
     if: ${{ github.event.workflow_run.conclusion == 'success' }}
     environment:
        name: Dev
     runs-on: ubuntu-latest
     steps:
        - uses: azure/login@v1
          with:
             creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        - uses: azure/aks-set-context@v3
          with:
             resource-group: 'sharnitha-poc'
             cluster-name: 'praceks'
  
    # Create K8s secrets to pull images
        - name: Create secret in Kubernetes cluster
          uses: Azure/k8s-create-secret@v1.1
          with:
              # Container registry url
              container-registry-url: https://githubcipractice.azurecr.io
              # Container registry username
              container-registry-username: '${{env.DOCKER_LOGIN}}'
              # Container registry password
              container-registry-password:  '${{env.DOCKER_PASSWORD}}'
              # Type of Kubernetes secret. For example, docker-registry or generic
              secret-type: docker-registry
              # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
              secret-name: docker-image-pull-secret
          
        # Deploy to k8s cluster
        - name: Deploy to Kubernetes cluster
          uses: Azure/k8s-deploy@v1
          with:        
              # Path to the manifest files which will be used for deployment.
              manifests: |
                k8s/deployment.yml
                k8s/service.yml
              # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
              images: '${{env.DOCKER_LOGIN}}/githubactions-aks-demo:${{github.sha}}'
              # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
              imagepullsecrets: docker-image-pull-secret
              # deploy/promote/reject
              action: deploy
