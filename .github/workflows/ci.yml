# DependencyInjectionExampleSolution
# /DepedencyInjectionUsingMVC
name: CI

on:
  # push:
  #   branches:
  #   - master
  workflow_dispatch:

env:
    GH_TOKEN: ${{ secrets.ARTIFACT_TOKEN }}
  
jobs:
  # Dotnet:
  #   uses: ./.github/workflows/dotnet_workflow_reuse.yml

  ManualSonar:
    runs-on: Ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Remove Previous Dotnet Version
      run : |
        cd /usr/share/dotnet/
        rm -rf *
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 3.1.426
    - name: Login in Azure portal via CLI
      run: docker login githubcipractice.azurecr.io -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}

    - uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: "Sharnikeyvault"
        secrets: 'mySecret1, mySecret2'
      id: myGetSecretAction
      
    - uses: sonarsource/sonarqube-scan-action@master
      env:
        # SONAR_TOKEN: "sqp_3fd8f19639f66b80eb72de8251e870726becdede" ${{ steps.Sharnikeyvault.outputs.mySecret1 }}
        SONAR_TOKEN: ${{ steps.myGetSecretAction.outputs.mySecret1 }}
        SONAR_HOST_URL:  ${{ steps.myGetSecretAction.outputs.mySecret2 }}
        # SONAR_HOST_URL: "http://20.84.62.68:9000"
      with:
       args: >
         -Dsonar.projectKey=dotnet
    
        
  Docker_Login:
    runs-on: ubuntu-latest
    needs: ManualSonar
    steps:
      - name: Docker Login to ACR
        uses: docker/login-action@v3.1.0
        with:
          registry: githubcipractice.azurecr.io
          username: ${{ secrets.DOCKER_LOGIN }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
          ecr: false
 
  Docker_Build:
    runs-on: ubuntu-latest
    needs: Docker_Login
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Docker build using Dockerfile
        run: |
          cd DependencyInjectionExampleSolution/DepedencyInjectionUsingMVC/
          gh run download ${{ github.run_id }}
          docker build -t githubcipractice.azurecr.io/demoenv:${{ github.run_id }} .
      - name: Aqua Security Trivy
        uses: aquasecurity/trivy-action@0.18.0
        with:   
          exit-code: 0
          severity: MEDIUM,HIGH,CRITICAL
          format: table
          image-ref: githubcipractice.azurecr.io/demoenv:${{ github.run_id }}
      - name: Docker build using Dockerfile
        run: |
          docker login githubcipractice.azurecr.io -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push githubcipractice.azurecr.io/demoenv:${{ github.run_id }}  
          docker history githubcipractice.azurecr.io/demoenv:${{ github.run_id }}

