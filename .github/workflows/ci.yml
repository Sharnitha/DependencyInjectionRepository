# DependencyInjectionExampleSolution
# /DepedencyInjectionUsingMVC
name: CI

on:
  workflow_dispatch:
  push:
    branches:
    - feature
    # paths:
    # - DependencyInjectionExampleSolution/DepedencyInjectionUsingMVC/*

# env:
#     GH_TOKEN: ${{ secrets.ARTIFACT_TOKEN }}
  
jobs:
  Dotnet:
    uses: ./.github/workflows/dotnet_workflow_reuse.yml

  # ManualSonar:
  #   runs-on: Ubuntu-latest
  #   needs: Dotnet
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   - name: Remove Previous Dotnet Version
  #     run : |
  #       cd /usr/share/dotnet/
  #       rm -rf *
  #   - name: Setup .NET Core SDK
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: 3.1.426
        
  #   - name: Azure CLI
  #     run: az login --service-principal -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} --tenant 406f6fb2-e087-4d29-9642-817873fddc4c

    # - uses: Azure/get-keyvault-secrets@v1
    #   with:
    #     keyvault: "Sharnikeyvault"
    #     secrets: 'mySecret3, mySecret4'
    #   id: myGetSecretAction
   
    # - uses: sonarsource/sonarqube-scan-action@master
    #   env:
    #     SONAR_TOKEN: "squ_33fc07c997a708b5beae2d6d3201ae4fa6a45e97" 
    #     SONAR_HOST_URL: "http://20.115.87.78:9090/"
    #     # SONAR_TOKEN: ${{ steps.myGetSecretAction.outputs.mySecret3 }}
    #     # SONAR_HOST_URL:  ${{ steps.myGetSecretAction.outputs.mySecret4 }}
    #   with:
    #    args: >
    #      -Dsonar.projectKey=dotnet
    
        
  # Docker_Login:
  #   runs-on: ubuntu-latest
  #   needs: Dotnet
  #   steps:
  #     - name: Docker Login to ACR
  #       uses: docker/login-action@v3.1.0
  #       with:
  #         registry: githubcipractice.azurecr.io
  #         username: ${{ secrets.DOCKER_LOGIN }} 
  #         password: ${{ secrets.DOCKER_PASSWORD }} 
  #         ecr: false

  # Docker_Build:
  #   runs-on: ubuntu-latest
  #   needs: ManualSonar
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Docker build using Dockerfile
  #       run: |
  #         cd DependencyInjectionExampleSolution
  #         docker build -t githubcipractice.azurecr.io/demoenv:${{ github.run_id }} --file Dockerfile-backend .
  #         # docker images
  #     - name: Aqua Security Trivy
  #       uses: aquasecurity/trivy-action@0.18.0
  #       with:   
  #         exit-code: 0
  #         severity: MEDIUM,HIGH,CRITICAL
  #         format: table
  #         image-ref: githubcipractice.azurecr.io/demoenv:${{ github.run_id }}
          
      # - name: Azure CLI
      #   run: az login --service-principal -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} --tenant ${{secrets.AZ_TENANT}}
        
      # - uses: Azure/get-keyvault-secrets@v1
      #   with:
      #     keyvault: "Sharnikeyvault"
      #     secrets: 'docker-login, docker-pass'
      #   id: DemoSecretAction
        
      # - name: Docker build using Dockerfile
      #   run: |
      #     docker login githubcipractice.azurecr.io -u ${{ steps.DemoSecretAction.outputs.docker-login }} -p ${{ steps.DemoSecretAction.outputs.docker-pass }}
      #     docker push githubcipractice.azurecr.io/demoenv:${{ github.run_id }}  
      #     docker history githubcipractice.azurecr.io/demoenv:${{ github.run_id }}

 
  # Docker_Build:
  #   runs-on: ubuntu-latest
  #   # needs: Dotnet
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Docker build using Dockerfile
  #       run: |
  #         cd DependencyInjectionExampleSolution/DepedencyInjectionUsingMVC/
  #         docker build -t githubcipractice.azurecr.io/demoenv:${{ github.run_id }} .
  #         docker images
       # gh run download ${{ github.run_id }}
         
      # - name: Aqua Security Trivy
      #   uses: aquasecurity/trivy-action@0.18.0
      #   with:   
      #     exit-code: 0
      #     severity: MEDIUM,HIGH,CRITICAL
      #     format: table
      #     image-ref: githubcipractice.azurecr.io/demoenv:${{ github.run_id }}
          
      # - name: Azure CLI
      #   run: az login --service-principal -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} --tenant ${{secrets.AZ_TENANT}}
        
      # - uses: Azure/get-keyvault-secrets@v1
      #   with:
      #     keyvault: "Sharnikeyvault"
      #     secrets: 'docker-login, docker-pass'
      #   id: DemoSecretAction
        
      # - name: Docker build using Dockerfile
      #   run: |
      #     docker login githubcipractice.azurecr.io -u ${{ steps.DemoSecretAction.outputs.docker-login }} -p ${{ steps.DemoSecretAction.outputs.docker-pass }}
      #     docker push githubcipractice.azurecr.io/demoenv:${{ github.run_id }}  
      #     docker history githubcipractice.azurecr.io/demoenv:${{ github.run_id }}

